# -*- coding: utf-8 -*-
"""BoostedPir

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1mkllHXVTRPTJr2EGu5X9gP5J8_e9NzB5
"""

import numpy as np
import matplotlib 
# Uncomment next line when running in python command line, rather than Jupyter/Colab.
matplotlib.use('Agg')
import matplotlib.pyplot as plt

block_size = 1024
num_blocks = [2048, 4096, 8192, 16384, 32768, 65536, 131072, 262144, 524288, 1048576]

# BoostedPIR IT scheme times (single instance)
raw_hint_gen_time_nsec = [1682897, 6152295, 17291180, 43929843, 97793325, 211517680, 524548300, 1317927800, 3375421700, 5700374800]
raw_answer_time_nsec = [8425, 11746, 15254, 23162, 40726, 52965, 128404, 207932, 318646, 486320]

# Percy++ 
#[Goldberg scheme]
goldberg_time_1q_sec = [0.026988, 0.02463, 0.043551, 0.064026, 0.116896, 0.212392, 0.411528, 0.834501, 1.687881, 3.736727]
#[CGKS95 scheme]
cgks_time_sec = [0.00172, 0.003607, 0.006788, 0.010603, 0.02648, 0.047735, 0.091764, 0.172307, 0.344443, 0.705103 ]

# SealPIR
seal_pir_time_sec = [0.127, 0.190, 0.374, 0.494, 0.820, 1.427, 2.542, 5.434, 8.767, 30.457]

# statistical security parameter
lam = 80

hint_gen_time_sec = [raw_hint_gen_time_nsec[i]*1e-9*80./np.log2(num_blocks[i]) for i in range(len(num_blocks))]

answer_time_sec = [raw_answer_time_nsec[i]*1e-9*80./np.log2(num_blocks[i]) for i in range(len(num_blocks))]

# Commented out IPython magic to ensure Python compatibility.
# %config InlineBackend.figure_format = 'png'
plt.figure(dpi=300)

plt.loglog(num_blocks, cgks_time_sec, label='Percy++ [CGKS95, GDLYHH14]', marker='x', linestyle='dotted')
plt.loglog(num_blocks, seal_pir_time_sec, label='SealPIR [ACLS18]', marker='v', linestyle='dotted')
plt.loglog(num_blocks, answer_time_sec, label='This work (Online)', marker='s', linestyle='dashed', linewidth=2.0 )
plt.loglog(num_blocks, hint_gen_time_sec, label='This work (Offline)', marker='o', linestyle='dashed', linewidth=2.0)

plt.xlabel('database size [blocks]')
plt.ylabel('server time [sec]')
plt.legend()
plt.grid()
plt.show()

plt.savefig("compare.png")

